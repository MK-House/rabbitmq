name: "Deploy RabbitMQ"
run-name: "${{ github.event_name }} by ${{ github.actor }} #${{ github.run_number }}.${{ github.run_attempt }}"

on:
  push:
    branches:
      - "main"

jobs:

  deploy-cloudflared:
    runs-on:
      - "self-hosted"
      - "tankian"
    env:
      TF_VAR_rabbitmq_default_user: "${{ vars.RABBITMQ_DEFAULT_USER }}"
      TF_VAR_rabbitmq_default_pass: "${{ secrets.RABBITMQ_DEFAULT_PASS }}"
      TF_VAR_docker_volume_basepath: "${{ vars.DOCKER_VOLUME_BASEPATH }}"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"
      - name: "Initialize Terraform"
        run: |
          terraform -chdir=./terraform init
      - name: "Plan Terraform configuration"
        run: |
          terraform -chdir=./terraform plan
      - name: "Apply Terraform configuration"
        run: |
          terraform -chdir=./terraform apply -auto-approve

  create-public-dns:
    runs-on:
      - "ubuntu-latest"
    needs:
      - "deploy-cloudflared"
    steps:
      - name: "Create public DNS record"
        env:
          CF_TUNNEL_ID: "${{ secrets.CF_TUNNEL_ID }}"
          CF_ACCOUNT_ID: "${{ secrets.CF_ACCOUNT_ID }}"
          CF_TUNNEL_API_TOKEN: "${{ secrets.CF_TUNNEL_API_TOKEN }}"
          CF_ACCOUNT_EMAIL: "${{ secrets.CF_ACCOUNT_EMAIL }}"
        run: |
          curl https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/cfd_tunnel/${CF_TUNNEL_ID}/configurations \
              -X PUT \
              -H 'Content-Type: application/json' \
              -H "X-Auth-Email: ${CF_ACCOUNT_EMAIL}" \
              -H "X-Auth-Key: ${CF_TUNNEL_API_TOKEN}" \
              -d '{
                'ingress': [
                  {
                    'hostname': 'rabbitmq.mkhouse.net',
                    'service': 'http://',
                    'path': 'mkhouse-rabbitmq:15672',
                  },
                ],
              }'
